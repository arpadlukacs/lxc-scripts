#!/bin/bash

script_name=`basename ${0}`

if [ $# -eq 0 ]; then
  echo -e "This tool allows to update a configured device of an LXC container.\n"
  echo -e "Usage:\n  ${script_name} container_name\n"
fi

CONTAINER_NAME="$1"
if [ -z "$CONTAINER_NAME" ]; then
  echo "${script_name}: The container name is required."
  exit 1
fi

ANY=$(lxc config device show ${CONTAINER_NAME})
if [ "$ANY" = "{}" ]; then
  echo "${script_name}: Container does not have any mapping, exiting"
  exit 0
fi

DEVICE_PATH=`lxc config device get ${CONTAINER_NAME} ${name} path`
DEVICE_SOURCE=`lxc config device get ${CONTAINER_NAME} ${name} source`

NEW_SOURCE=$(gum input --placeholder "Source path on host" --value "${DEVICE_SOURCE}")
NEW_PATH=$(gum input --placeholder "Target path in container" --value "${DEVICE_PATH}")

lxc config device set ${CONTAINER_NAME} ${name} path="${NEW_PATH}" source="${NEW_SOURCE}"

IFS=$'\n' read -r -d '' -a devices < <( lxc config device show ${CONTAINER_NAME}|grep -v "^\s.*"|cut -d: -f1 )
declare -p devices

for name in "${devices[@]}"
do
  lxc config device remove ${CONTAINER_NAME} ${name}
done
